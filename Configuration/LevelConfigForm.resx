<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAANAAAAFQAAABgAAAAYAAAAFQAAAA0AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQMC
        ABU1JQBbbkwBo5lpAdC0fAHtwYUB/MGFAfy0fAHtmWkB0G9MAaQ2JQBbAwIAFQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUE
        ABNSOQB/q3YB5MKGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv+rdgHkUzkAfwcE
        ABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIB
        AAEnGgBDoG4B2MKGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KG
        Av/ChgL/oG4B2CgbAEMDAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAADAgACQi0AZLuBAfbChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KG
        Av/ChgL/woYC/8KGAv/ChgL/u4EB9kMuAGUEAwACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEQvAGO/hAH7woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KG
        Av/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/v4QB+0YwAGMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAvIAA8u4EB9sKGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/sXoC/654
        Av+ueAL/sXoC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/u4EB9jMjADwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEQsACqFvAdfChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8CF
        A//38+r////////////38+r/wIUD/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/oW8B1xYP
        AAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhQwB0woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/wIUC/8KG
        Av/BhQL/v44k//////////////////////+/jiT/wYUC/8KGAv/AhQL/woYC/8KGAv/ChgL/woYC/8KG
        Av/ChgL/ZUYAcwAAAAAAAAAAAAAAAAAAAAAAAAAAGBEABqt2AePChgL/woYC/8KGAv/ChgL/woYC/72E
        Bf/NtH7/vJQ7/7+ZRf/u5tX//////////////////////+7m1f+/mUX/vJM7/820fv+9hAX/woYC/8KG
        Av/ChgL/woYC/8KGAv+sdgHjIBYABgAAAAAAAAAAAAAAAAAAAABTOQBKwoYC/8KGAv/ChgL/woYC/8KG
        Av/ChgL/z69o/////////////////////////////////////////////////////////////////8+v
        aP/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv9cPwBKAAAAAAAAAAAAAAAAAAAAAI9iAZPChgL/woYC/8KG
        Av/ChgL/woYC/72HDv/18ef/////////////////////////////////////////////////////////
        ////////9fHo/72HDv/ChgL/woYC/8KGAv/ChgL/woYC/5NlAZMAAAAAAAAAAAAAAAAAAAAAqnYBycKG
        Av/ChgL/woYC/8KGAv/ChgL/2LVn///////////////////////9+/f/3Llt/8WNEP/FjRD/3Llt//37
        9///////////////////////2LVn/8KGAv/ChgL/woYC/8KGAv/ChgL/rHcByQAAAAAAAAAAAAAAAAAA
        AAC3fgHrwoYC/8KGAv/ChgL/woYC/8KGAv/DiQj/6tar/////////////////9u5bf/ChgL/woYC/8KG
        Av/ChgL/3Llt/////////////////+rXq//DiQn/woYC/8KGAv/ChgL/woYC/8KGAv+3fwHrAAAAAAAA
        AAAAAAAAAAAAAMGFAvvChgL/woYC/8KGAv/ChgL/woYC/8KGAv/JlST/////////////////xYwQ/8KG
        Av/ChgL/woYC/8KGAv/FjBD/////////////////yZUk/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8GF
        AvsAAAAAAAAAAAAAAAAAAAAAwoYD+8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8SSJP//////////////
        ///AiRD/woYC/8KGAv/ChgL/woYC/8CJEP/////////////////EkiT/woYC/8KGAv/ChgL/woYC/8KG
        Av/ChgL/woYD+wAAAAAAAAAAAAAAAAAAAADChwTpwoYC/8KGAv/ChgL/woYC/8KGAv+7gwj/38+r////
        /////////////86wbf/AhAL/woYC/8KGAv/AhAL/z7Bt/////////////////9/Pq/+7gwn/woYC/8KG
        Av/ChgL/woYC/8KGAv/ChwTpAAAAAAAAAAAAAAAAAAAAAMOIB8XChgL/woYC/8KGAv/ChgL/woYC/9m2
        Z////////////////////////Pr3/8qtbf+yfxD/sn8Q/8qtbf/8+vf//////////////////////9m2
        Z//ChgL/woYC/8KGAv/ChgL/woYC/8OIBsUAAAAAAAAAAAAAAAAAAAAAxIsMjcKGAv/ChgL/woYC/8KG
        Av/ChgL/xYwO//nz5///////////////////////////////////////////////////////////////
        ///59Oj/xYwO/8KGAv/ChgL/woYC/8KGAv/ChgL/xIoLjQAAAAAAAAAAAAAAAAAAAACwfxJCwoYC/8KG
        Av/ChgL/woYC/8KGAv/ChgL/2rZo////////////////////////////////////////////////////
        /////////////9q2aP/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv+5hRFCAAAAAAAAAAAAAAAAAAAAAG1P
        DALDiQndwoYC/8KGAv/ChgL/woYC/8KGAv/ChwX/38F+/8+hO//Spkb/9OrV////////////////////
        ///069X/0qZF/8+hO//fwX7/wocF/8KGAv/ChgL/woYC/8KGAv/ChgL/w4kJ3npYDgIAAAAAAAAAAAAA
        AAAAAAAAAAAAAMOMFGfChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/KliT/////////
        /////////////8qWJP/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/FjRRnAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAeVcPBMSLDc/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KG
        A//69ev////////////69er/woYD/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/xIsNz4Rg
        EAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsoEVLMOJCPTChgL/woYC/8KGAv/ChgL/woYC/8KG
        Av/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8OJ
        CPS5hhYsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwowXTsOICPrChgL/woYC/8KG
        Av/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KG
        Av/DiAj6xI4XTgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwo0YTsSK
        C/TChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KG
        Av/ChgL/xIoL9MSOGE4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAtYMXLMWNEs/ChwX/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KG
        Av/ChgL/wocF/8WNEs+5hhcsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAflsQA8aQGWfFjRHdw4gI/8KGAv/ChgL/woYC/8KGAv/ChgL/woYC/8KG
        Av/ChgL/w4gI/8WNEd7GkBlohGEQBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHVWDwK5hhhCx5AYjcaOE8XFjBDpxYwO+8WM
        DvvFjBDpxo4TxceQGI66hxdCe1kPAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////wD///gAH//wAA//wAAD/4AAAf+AAAH/AAAA/gAAAH4AAAB8AA
        AAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA+AAAAfgAAAH8AAAD/gA
        AB/8AAA//gAAf/8AAP//wAP///////////8=
</value>
  </data>
</root>