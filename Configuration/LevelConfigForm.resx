<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMB
        AwcAAAAZAAAAGQAAABkAAAAZAAAAGQAAABkEAgQHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAazJlbbdVrf64Vq7/uFau/7hWrv+4Vq7/t1Wt/nA0am0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACYR4+tuFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/mkeRrQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKVNnN+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+lTZzfAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAHAAAABQAAAAAAAAAAAAAAAAEAAQw3GTRbt1Wt/rhWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7dV
        rf44GjVbAgECDAAAAAAAAAAAAAAAAAAAAAUBAAEGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACwUKA20zZ6FwNGqsMxcwWwMBAxchDyA/jUKFzLhWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/uFau/7hWrv+NQoXMIxAhPwMBAxcyFy9acDRqrG0zZ6AOBg0DAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABDHz9Ut1at/rhWrv+4Vq7/qU+g7LFTqPa4Vq7/uFau/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+xU6j2qU+f67hWrv+4Vq7/t1Wt/kchQ1QAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAEQgQC51JlNy4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/nUmU3BYK
        FQsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABcK1d8uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/tlWs/6xQo/+mTZ3/pk2d/6xQo/+2Vaz/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/XyxaewAAAAAAAAAAAAAAAAAAAAAAAAAAHg4dHqxQo/C4Vq7/uFau/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/uFau/65Vpf/GmcH/6drn//v5+//7+fv/6dro/8aZwf+uVaX/uFau/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/uFau/7hWrv+sUKPwIxAhHgAAAAAAAAAAAAAAAAAAAACTSoyJuFau/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/uFau/7hWrv+zY6v/7N7q/////////////////////////////////+ze6/+zY6v/uFau/7hW
        rv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+WS46JAAAAAAAAAAAAAAAAAAAAALhtsTi9Y7TsuFau/7hW
        rv+4Vq7/uFau/7hWrv+4Vq7/tFiq/+zf6////////////////////////////////////////////+zf
        6/+0WKr/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/vWO07LxvtDgAAAAAAAAAAAAAAAAAAAAAAAAAALBo
        qCe/Z7bduFau/7hWrv+4Vq7/uFau/7hWrv/Qncr/////////////////////////////////////////
        /////////////9Cdyv+4Vq7/uFau/7hWrv+4Vq7/uFau/79ntt20a60nAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJ1Ulim4Vq7/uFau/7hWrv+4Vq7/uFau/+3b6///////////////////////////////
        ////////////////////////7Nvr/7hWrv+4Vq7/uFau/7hWrv+4Vq7/o1ebKQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAczZsL7hWrv+4Vq7/uFau/7hWrv+4Vq7//Pn7////////////////////
        ///////////////////////////////////8+fv/uFau/7hWrv+4Vq7/uFau/7hWrv99O3YuAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB9QHcuuFau/7hWrv+4Vq7/uFau/7hWrv/8+vz/////////
        //////////////////////////////////////////////z6/P+4Vq7/uFau/7hWrv+4Vq7/uFau/4lF
        gi4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgbNTi4Vq7/uFau/7hWrv+4Vq7/uFau//Dd
        7v//////////////////////////////////////////////////////8N3u/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/PR06OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiECE9oUuZ5LhWrv+4Vq7/uFau/7hW
        rv+4Vq7/16HS///////////////////////////////////////////////////////XodL/uFau/7hW
        rv+4Vq7/uFau/7hWrv+iS5nkJBEiPQAAAAAAAAAAAAAAAAAAAAAAAAAAPx48RqxQovC4Vq7/uFau/7hW
        rv+4Vq7/uFau/7hWrv+6W7D/8uHx////////////////////////////////////////////8uHx/7pb
        sP+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+sUKLwQh8+RgAAAAAAAAAAAAAAAAAAAAC7ZrKFuFau/7hW
        rv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv/Aabf/8uHx//////////////////////////////////Lh
        8f/Aabf/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+7ZrKFAAAAAAAAAAAAAAAAAAAAAJZY
        kBO7XrLtuFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+6W7D/16HR//Dd7v/8+vz//Pr8//Dd
        7//XodL/uluw/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/u16y7aBemRMAAAAAAAAAAAAA
        AAAAAAAAAAAAAMBtuG24Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv/CbrltAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAeEdzBL1jtNW4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hW
        rv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/vWO01YVO
        fwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuGuwRrlYr/64Vq7/u16x/79pt+e9YrT0uFau/7hW
        rv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/vWK09MBpt+e7XrH/uFau/7lY
        r/69bbRGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw3G6j8Rzu5i4brFCe0l2A7Bp
        qSjCbrm/u16x/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/u16x/8FuucC0a60oekl1A7Vs
        rkHDc7uYw3G6jwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC2a69CuFeu/bhWrv+4Vq7/uFau/7hWrv+4Vq7/uFau/7hXrv25bLFDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC6W7DbuFau/7hWrv+4Vq7/uFau/7hWrv+4Vq7/uluw2wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtesqm4Vq7/uFau/7hWrv+4Vq7/uFau/7hW
        rv+7XbGpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv223Zr9ntv6/Z7b/v2e2/79n
        tv+/Z7b/v2e2/sFuuWUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////wD///8A////AP///wD//5wAOf8AAAD/AAAA/gAAAH4AAAB8AA
        AAPAAAADwAAAA+AAAAfwAAAP8AAAD/AAAA/wAAAP4AAAB8AAAAPAAAADwAAAA+AAAAfgAAAH8AAAD/gA
        AB//4Af///AP///wD///8A////////////8=
</value>
  </data>
</root>