<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQcHAAAAAAACAQE3AgEBpwEAACkAAAAACQsKAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcFBQAAAAAAAAAALRwbG8hraWn/Hh0dugAA
        ACIAAAAACgkJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBQUABQMDAAAAAC4mJSXKTEtL/6Wk
        pP+enZ3/GxkZuwAAACIAAAAACQoJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAAAAAAAAAAAuBwYGyo+P
        j//m5ub/amlp/6Wkpf+dnZ3/GxkZuwAAACIAAAAADg8OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcGBgAAAAAAAAAALiIh
        IcqFhIT/ZGNj/9HR0f/m5ub/aWho/6WkpP+cnJz/GxkZuwAAACIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBQUABAICAAAA
        AC4iISHKR0VF/8jIyP/Ew8P/X15e/9PT0//m5ub/a2pq/7u6uv+gn5//HRsbugAAACgAAAAAAAAAAAAA
        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
        //8AB///gA///8Af///gP///8H////j///8=
</value>
  </data>
</root>