<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcn
        Jw00NCsdNDQrHScnJw0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6MTEaODQycEA8
        ObZkYF7qfHl3/omHhf+BfHX/dXBq/l9bVuo/Oji2ODQycDoxMRoAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0NC0nPTg2p3l3
        dfvDwcD/9/f3/////////////////+rl2P/q5dj/6uXY/+Pe0f+0r6X/c25o+z04Nac0NC0nAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEOTUxgHZz
        cfnh4eD/////////////////////////////////6uXY/+rl2P/q5dj/6uXY/+rl2P/q5dj/z8u//3Bs
        Zvk5NTGAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALy8vEERA
        Pr22tbT//v7+///////////////////////y8vH/0dDP//j39//k39P/wbyy/97ZzP/q5dj/6uXY/+rl
        2P/q5dj/6eTX/6mkm/9DPzu9Ly8vEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8v
        LxBKRkTN1dTU////////////////////////////oZ+d/3t5d/+fnZz/8vLx/+Dbzv+UkIj/c29p/5KO
        hv/q5dj/6uXY/+rl2P/q5dj/6uXY/8TAtf9JRUHOLy8vEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAADREA+vdXU1P/////////////////GxcT/i4iG////////////////////////////6uXY/+rl
        2P/q5dj/6uXY/+rl2P+FgHn/t7Oo/9XQxP+sp57/5+LV/8XAtf9DPzu9AAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADk1MYC2tbT/////////////////qqin/4mGhf/29vb////////////+/v3/4eDg//r5
        +f/m4dT/z8q//+nk1//q5dj/6uXY/9/azv9VUEz/ZWBW/355bv+sp57/6uXY/6mkm/85NTGAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA1NS4mdnNx+f7+/v/////////////////w7+//////////////////trSz/2xp
        Z/+OjIr/7u3t/9zXy/+FgXr/Z2Jd/6eimf/Ev7T/ZWFa/5eQfP/c1b//bGhi/9TQxP/q5dj/6eTX/3Br
        Zfk0NC0nAAAAAAAAAAAAAAAAAAAAAD04Nqfh4eD////////////Ix8b/wL++////////////2tnZ//j4
        +P/19fX//v7+////////////6uXY/+rl2P/f2s7/e3Zv/3JtYP/EvKD/3dbA/6ahmP9kYFr/uLSq/+rl
        2P/q5dj/z8q//z04NacAAAAAAAAAAAAAAAA6MTEaeXd1+///////////+fn5/2pnZf/29vb//////9HQ
        z/9zcW7/+Pj4///////////////////////p5Nf/r6uh/2JdVf+poov/0ciq/93WwP/b1sr/Z2Nd/9/a
        zv9lYVv/5eDT/+rl2P/q5dj/c25o+zoxMRoAAAAAAAAAADg0MnDCwcD////////////Lysn/u7q5////
        ///+/v7/bWpo//T09P//////////////////////5ubl/3FtZv+EfW3/zMOm/9HIqv/d1sD/6uXY/3t3
        cP/Dv7T/6uXY/62on/+6tav/6uXY/+rl2P+0r6X/ODQycAAAAAAAAAAAQDw5tvf39v//////////////
        ///////////////////8/Pz/////////////////+/v7/6Sjof9nYlj/ubCX/9HIqv/RyKr/3dbA/+rl
        2P+8t63/hH94/+rl2P/q5dj/6uXY/+rl2P/q5dj/6uXY/+Pe0f8/Oji2AAAAAAAAAABkYF7q////////
        ///z8/P/uLe2///////+/f3/tbOy//////////////////v7+/9fW1n/fnhp/5iRff+ZkX3/ycCk/93W
        wP/q5dj/5N/S/2VhXP/f2s7/qqWc/+nk1//q5dj/ramf/+Dbzv/q5dj/6uXY/19bVuoAAAAAKioqDHx5
        d/7//////////9HQz/+fnZz//////+Df3/+OjIr/////////////////paOh/yspkP9MSUb/trSz/7a0
        s/9mYlz/4dzQ/+rl2P+QjIT/r6uh/+rl2P+FgXr/zsm+/+rl2P+UkIj/wbyx/+rl2P/q5dj/dXBq/icn
        Jw00NCsdiYeF////////////wL69/7Gwr///////ycfH/6impf///////////+bm5f86N27/JSSy/7W0
        s////////////7a0s/+opJr/zsm9/3JtZ//p5Nf/6uXY/52Yj/+5tKr/6uXY/6Wgl/+xraP/6uXY/+rl
        2P+BfHX/NDQrHTQ0Kx2Jh4X////////////u7e3/7Ozs///////w8PD/6ejo///////+/v7/c3B0/x8e
        3v8lJLP/qKSa/+rl2P/q5dj/qKSa/6ijmv9saGL/1M/D/+rl2P/q5dj/087C/9rVyf/q5dj/1dDE/9bR
        xf/q5dj/6uXY/4F8df80NCsdKioqDHx5d/7////////////////5+fn////////////19fT//////728
        u/8qKJf/Ghr//xsb9f9EQGD/qaSb/6mkm/9KRkP/ioV+/5mVjP/q5dj/6uXY/+rl2P/l4NP/6uXY/+rl
        2P/p5Nf/6uXY/+rl2P/q5dj/dXBq/icnJw0AAAAAZGBd6v//////////9fX1/3x5d////////////29s
        af/z8/P/SUZl/xoa+P8aGv//ERHq/wsLzv8bGZn/GxmZ/yMhff9bV1L/5+LV/+rl2P/q5dj/6eTX/2tm
        Yf/q5dj/6uXY/3dzbf/j3tH/6uXY/+rl2P9fW1bqAAAAAAAAAABAPDm29/f2////////////b21q//j4
        +P//////mZeV/2ZiYf8iIcr/Ghr//xER6v8JCdb/CQnW/xAQvP81MmL/mZWM/+fi1f/q5dj/6uXY/+rl
        2P+5tKr/j4qC/+rl2P/k39L/amZg/+rl2P/q5dj/497R/z86OLYAAAAAAAAAADg0MnDCwcD/////////
        //+5uLb/2tnZ///////Kycn/Lit9/xoa//8REer/CQnW/woK0f8hH4P/cm9z/9TPw//q5dj/6uXY/+rl
        2P/q5dj/6uXY/6Sflv/f2s3/6uXY/8O/tP+opJr/6uXY/+rl2P+0r6X/ODQycAAAAAAAAAAAOjExGnl2
        dPv/////////////////////+/v7/1xZZ/8cHO7/ERHq/wkJ1v8VFKv/RkNf/728u//+/v7/6uXY/+rl
        2P/q5dj/6uXY/+Dbz//Qy7//6uXY/+rl2P/q5dj/6uXY/+rl2P/q5dj/6uXY/3NuaPs6MTEaAAAAAAAA
        AAAAAAAAPTg1puHg4P///////////+Pj4v9eWlj/JiSw/xER6v8MDMj/JyVu/2ZjYv/z8/P/////////
        ///q5dj/6uXY/+rl2P+5tKr/ZWFc/8S/tP/q5dj/6eTX/4iEfP/W0sb/6uXY/+rl2P/Pyr//PTg1pwAA
        AAAAAAAAAAAAAAAAAAA1NS4mdnNx+f7+/v//////5+fm/zk2bP8REen/GxqX/1pXZf/Kycn/pKKg//39
        /f/T0tL/qKal/5yYj//Hw7j/5uHU/5WRif/f2s3/6uXY/+rl2P+UkIj/k4+H/+rl2P/q5dj/6eTX/29r
        Zfk0NC0nAAAAAAAAAAAAAAAAAAAAAAAAAAA5NTGAtrSz//////+6ubj/KCaA/zYzY/+lo6L/+/v7////
        /////////////+7u7f/Ix8f/ubSq/9zXy//q5dj/6uXY/+rl2P/q5dj/6eTX/6ahmP/p5Nf/6uXY/+rl
        2P+ppJv/OTUxgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANDQDy91dTT//v7+/+6ubj/5+fm////
        //+Mioj/tLKx//j4+P/////////////////q5dj/6uXY/+rl2P/k39L/p6KZ/4uHf//q5dj/6uXY/+rl
        2P/q5dj/xcC1/0M/O70AAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8vLxBKRkTO1dTU////
        //////////////n5+f+urav/iIWE///////X19b/sbCv/6Wgl//Mx7z/6uXY/3h0bf+inpX/5N/S/+rl
        2P/q5dj/6uXY/8TAtf9JRUHOLy8vEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8v
        LxBDQD69trWz//7+/v///////////////////////////+bm5f/Avr3/sa2j/9fSxv/q5dj/6uXY/+rl
        2P/q5dj/6uXY/+nk1/+ppJv/Qz87vS8vLxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAM6NjJ/dnNx+eHg4P/////////////////////////////////q5dj/6uXY/+rl
        2P/q5dj/6uXY/+rl2P/Pyr//cGtl+Tk1MYAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1NS4mPTg1pnl2dPvCwcD/9/f2/////////////////+rl
        2P/q5dj/6uXY/+Pe0f+0r6X/cm5o+z04Nac1NS4mAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOjExGjg0MnBAPDm2ZGBd6nx5
        d/6Jh4X/gXx1/3Vwav5eW1bqPzo4tjg0MnA6MTEaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAKioqDDQ0Kx00NCsdKioqDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//w////AA///AAD//AAAP/gAAB/wAAAP4AAAB+AAAAfAAAADwAAAA4AA
        AAGAAAABgAAAAYAAAAEAAAAAAAAAAAAAAAAAAAAAgAAAAYAAAAGAAAABgAAAAcAAAAPAAAAD4AAAB+AA
        AAfwAAAP+AAAH/wAAD//AAD//8AD///8P/8=
</value>
  </data>
</root>