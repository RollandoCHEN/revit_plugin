<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKBvkAGeZ4gRnmWHHJ5lhxyeZYccnmWHHJ5lhxyeZYccnmWHHJ5lhxyeZYccnmWHHJ5l
        hxyeZYccnmWHHJ5lhxyeZYccnmWHHJ5lhxyeZ4gdnmuME5xqiwEAAAAAAAAAAJ5rjASeaosYnmaHHZ5l
        hxyeZYccnmWHHZ5lhxmdaYoIn2uMNaBxkrigeJjfoXmZ36F5md+heZnfoXmZ36F5md+heZnfoXmZ36F5
        md+heZnfoXmZ36F5md+heZnfoXmZ36F5md+heZnfoXmZ36B2luKfbI2knmuMBgAAAAAAAAAAn2qMJJ9u
        j8uheJjgoXmZ36F5md+heZngoHaW159tjoieZ4mDpZm2/6zQ5/+ryeL/qsnh/6rJ4f+qyeH/qsnh/6rJ
        4f+qyeH/qsnh/6rJ4f+qyeH/qsnh/6rJ4f+qyeL/q8ni/6rJ4v+ryuP/qLLN/59vkMefa4wIAAAAAAAA
        AACeZ4lBoYCg9KrE3f+qyeL/qsni/6vM5f+qwdr/oHaW9Z5niY2mpsL/qbvV/6SBnv+ohqD/qIag/6iG
        oP+ohqD/qIag/6iGoP+ohqD/qIag/6iGoP+ohqD/qIag/6aDn/+jgJ3/qISc/6iFnf+mf5n/n22Ox59s
        jQgAAAAAmGWEAZ9sjYOkdZH+qISc/6iFnP+ng5z/pJGu/6vN5f+hepr/nmeJjaamwv+mrMj/wZSc/+3N
        tP/rzLP/7Myz/+zMs//rzLP/68yz/+vMs//rzLP/68yz/+vMs//tzbT/1a+o/7SBiv/qu4X/7L2F/9io
        h/+ib43HnmuNCAAAAACbZ45CqneM39ysh//rvIX/67yF/+Cwhf+ngpr/qsni/6F6mv+eZ4mNpqbC/6as
        yP/HnqD//OG8//jdu//12bn/99y6//rfvP/637v/+t+7//rfu//637v/+t+7//zhvP/fva//uIeL//jL
        hf/6zoX/47WH/6JvjcucaY0snWmNa6d1jNnUpYj/+MuF//nMhf/6zYX/7b6F/6mEm/+qyeL/oXqa/55n
        iY2mpsL/pqzI/8edoP/84bz/4b+v/7SHmP/VsKj/+t+7//neu//53rv/+d67//neu//53rv/++C8/968
        rv+4hov/98qF//nMhf/mt4f/qHaM9qt5jOG8i4r53rCH//fKhf/4y4X/+MuF//nMhf/svYX/qISb/6rJ
        4v+hepr/nmeJjaamwv+mrMj/x52g//vgvP/017j/6cqz//HTt//53rv/+d67//neu//53rv/+d67//ne
        u//74Lz/3ryu/7iGi//3yoX/+MuF//XIhf/pu4b/672G//THhf/5zIX/+MuF//jLhf/4y4X/+cyF/+y9
        hf+ohJv/qsni/6F6mv+eZ4mNpqbC/6asyP/HnaD/++G8/+7Qtf/Ztar/6Miy//neu//53rv/+N27//ba
        uf/22rn/9tq5//fcuv/cua3/t4aL//fKhf/4y4X/+MuF//nMhf/5zIX/+MuF//jLhf/4y4X/+MuF//jL
        hf/5zIX/7L2F/6iEm/+qyeL/oXqa/55niY2mpsL/pqzI/8edoP/74bz/5cSw/7+Unf/at6v/+t+7//rg
        vP/jwrD/tIeX/7SHlv+0h5b/tYeX/65/lP+8i4r/98qF//jLhf/4y4X/+MuF//jLhf/4y4X/+MuF//jL
        hf/4y4X/+MuF//nMhf/svYX/qISb/6rJ4v+hepr/nmeJjaamwv+mrMj/x52g//vgvP/43bv/99y6//jd
        u//53rv/++C8/9y5rf+zgoz/4bKG/+O1hv/jtIb/47WG/+y+hv/4y4X/+MuF//jLhf/4y4X/+MuF//jL
        hf/4y4X/+MuF//jLhf/4y4X/+cyF/+y9hf+ohJv/qsni/6F6mv+eZ4mNpqbC/6asyP/HnaD//OG8/+LB
        r/+3i5n/1rKp//rfu//637v/6Mmz/7aHkf/rvYb/+s6F//nMhf/5zIX/+cyF//jLhf/4y4X/+MuF//fK
        hf/4y4X/+MuF//jLhf/4y4X/+MuF//jLhf/5zIX/7L2F/6iEm/+qyeL/oXqa/55niY2mpsL/pqzI/8ed
        oP/74Lz/8dS3/+PDsP/uz7X/+d67//neu//327r/xJqf/8WUif/1x4X/+cyF//jLhf/4y4X/+MuF//nM
        hf/qvIb/zJyJ//bJhf/4y4X/+MuF//jLhf/4y4X/+MuF//nMhf/svYX/qISb/6rJ4v+hepr/nmeJjaam
        wv+mrMj/x52g//vgvP/w07b/4L6u/+zNtP/53rv/+d67//rfu//szrT/uYyY/8STif/nuYb/9MeF//jL
        hf/4y4X/+c2F/+Kzh/+0gov/9MeF//fKhf/3yoX/98qF//fKhf/3yoX/+MuF/+u8hf+ohJv/qsni/6F6
        mv+eZ4mNpqbC/6asyP/HnaD//OG8/+PCsP+6jpv/17Oq//rfu//53rv/+d67//rfu//tz7X/xp2h/7aH
        kv+3hoz/zZ2J//fKhf/5zYX/47WH/6d0jP+3hov/uIeL/7iHi/+4h4v/uIeL/7iHi/+4h4v/tIKK/6N+
        m/+ryeL/oXqa/55niY2mpsL/pqzI/8edoP/74Lz/+d27//jcuv/43bv/+d67//neu//53rv/+d67//rf
        u//43Lr/7M21/8ympv+2hYv/98qF//nNhf/itIf/r32M/9usiP/drof/3a6H/92uh//drof/3a6H/92v
        h//UpIf/poKb/6rJ4v+hepr/nmeJjaamwv+mrMj/x52g//zhvP/jw7D/u5Cc/9i1qv/637v/+d67//ne
        u//53rv/+d67//neu//74bz/376v/7iHi//3yoX/+cyF/+O1h/+5h4v/98qF//rNhf/6zYX/+s2F//rN
        hf/6zYX/+s6F/+2+hf+phJv/qsni/6F6mv+eZ4mNpqbC/6asyP/HnaD/++G8/+/Rtv/duq3/6suz//ne
        u//53rv/+d67//neu//53rv/+d67//vgvP/evK7/uIaL//fKhf/4y4X/8sWF/+e5hv/3yoX/+MuF//jL
        hf/4y4X/+MuF//jLhf/5zIX/7L2F/6iEm/+qyeL/oXqa/55niY2mpsL/pqzI/8edoP/74Lz/8tW4/+bG
        sf/v0bb/+d67//neu//53rv/+d67//neu//53rv/++C8/968rv+4hov/98qF//jLhf/4y4X/+cyF//jL
        hf/4y4X/+MuF//jLhf/4y4X/+MuF//nMhf/svYX/qISb/6rJ4v+hepr/nmeJjaamwv+mrMj/x52g//zh
        vP/hwK//tomZ/9Wxqf/637v/+d67//neu//53rv/+d67//neu//74Lz/3ryu/7iGi//3yoX/+MuF//jL
        hf/4y4X/+MuF//jLhf/4y4X/+MuF//jLhf/4y4X/+cyF/+y9hf+ohJv/qsni/6F6mv+eZ4mNpqbC/6as
        yP/HnaD/++C8//jdu//327r/+Ny6//neu//53rv/+d67//neu//53rv/+d67//vgvP/evK7/uIaL//fK
        hf/4y4X/+MuF//jLhf/4y4X/+MuF//jLhf/4y4X/+MuF//jLhf/5zIX/7L2F/6iEm/+qyeL/oXqa/55n
        iY2mpsL/pqzI/8edoP/74bz/5cWx/8GXnv/cuaz/+t+7//neu//53rv/+d67//neu//53rv/++C8/968
        rv+4hov/98qF//jLhf/4y4X/+MuF//jLhf/4y4X/+MuF//jLhf/4y4X/+MuF//nMhf/svYX/qISb/6rJ
        4v+hepr/nmeJjaamwv+mrMj/x52g//vhvP/szrT/1LCo/+bFsf/537v/+d67//neu//53rv/+d67//ne
        u//74Lz/3ryu/7iGi//3yoX/+MuF//jLhf/4y4X/+MuF//jLhf/4y4X/+MuF//jLhf/4y4X/+cyF/+y9
        hf+ohJv/qsni/6F6mv+eZ4mNpqbC/6WsyP/InqD//OK8//vhvP/84r3/++C8//neu//53rv/+d67//nf
        u//64Lz/+uC8//zivf/fvq//uIeL//jLhf/5zIX/+cyF//nMhf/4y4X/+MuF//jLhf/4y4X/+cyF//nM
        hf/6zYX/7b6F/6mEm/+qyeL/oXqa/55niY2mpsL/p67J/7B+k//Gm5//xZuf/8Wbn//eu63/++G8//rg
        vP/74bz/6820/8eeof/Fmp//xpuf/7qMmf+pdYv/xJKI/8WTiP/Ekoj/1KWI//jLhf/5zYX/+s2F//LE
        hv/Lmon/xJKI/8WTiP+/jIf/pH+b/6vK4v+hepr/nmeJjaakwP+s0un/p7DL/6auyv+mr8v/opKx/65+
        lP/HnqH/xp6h/8efof+5jJn/oICg/6auyv+mrsr/pq/K/6ewy/+mr8v/prDM/6Oevf+ndo7/xZSK/8aV
        iv/Glon/v42J/6F4l/+lqsf/pq/L/6auy/+pvNb/rNHo/6F5mf+eaYtlooOi8aaivv+mpMD/pqTA/6al
        wf+jjav/nmqMyJtni3ObZ4t1m2eLcp1oiqKhfp3/pqTA/6akwP+mpMD/pqTA/6akwP+mpcH/pJe0/59t
        jt+baI15m2iNdZtojXOcaIyNoHWW9qagvf+mpMD/pqTA/6akwP+kmLX+oHKS0qBtjQ6eaYpXnmeIeJ5n
        iHieZ4h4nmeIeJ9pinmebI1AAAAAAAAAAAAAAAAAn2yNIp9qi3SeZ4h5nmeIeJ5niHieZ4h4nmeIeJ5n
        iHifaIp6n2uMVZ5rjAMAAAAAAAAAAJ9sjRGfa4xrnmeJeZ5niHieZ4h4nmeIeZ5oiXCfa4w0AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////wAAAwAAAAMAAAADAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAADgAwD///////////////8=
</value>
  </data>
</root>